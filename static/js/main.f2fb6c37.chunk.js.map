{"version":3,"sources":["utils/styles.ts","utils/hyperlink-aliaser.ts","resources/components/Mission.tsx","resources/components/Missions.tsx","resources/components/Background.tsx","resources/components/PersonalResponse.tsx","resources/components/Assistance.tsx","resources/components/Translation.tsx","resources/components/Vocabulary.tsx","resources/components/Shop.tsx","resources/components/Questions.tsx","resources/exercises/alevel/satires.tsx","resources/exercises/alevel/index.ts","resources/exercises/gcse/aeneid2.tsx","resources/exercises/gcse/index.ts","resources/exercises/index.ts","utils/resource-loader.ts","utils/password.ts","views/Exercise.tsx","views/Home.tsx","views/Password.tsx","views/Shop.tsx","views/index.js","persistence/state.js","components/Toolbar.tsx","components/Drawer.tsx","components/Content.tsx","components/Settings.tsx","persistence/store.js","index.js","App.tsx","assets/home/teacher-square.png","assets/alevel/satires/column.png","assets/alevel/satires/harp.png","assets/alevel/satires/helmet.png","assets/alevel/satires/jar.png","assets/alevel/satires/ladle.png","assets/alevel/satires/owl.png","assets/alevel/satires/peacock.png","assets/alevel/satires/scroll.png","assets/alevel/satires/shield.png","assets/alevel/satires/ship.png","assets/alevel/satires/sword.png","assets/alevel/satires/toga.png","assets/password/hermes.png","assets/password/pigeon.png"],"names":["classNames","join","useDefaultStyles","makeStyles","theme","hbox","display","flexDirection","flexGrow","flexShrink","vbox","centered","alignItems","grow","fixed","scroll","overflow","noOverflow","link","color","palette","type","secondary","light","dark","buttonArea","background","default","padding","spacing","justifyContent","compulsory","fontSize","typography","pxToRem","main","fontWeight","ALIASES","useStyles","heading","flexBasis","secondaryHeading","text","URL_REGEX","addHyperlinks","exercise","defaultClasses","React","isValidElement","elements","split","map","part","startsWith","Link","className","key","rel","target","href","match","Object","keys","find","matchText","includes","getAlias","Fragment","err","Mission","mission","classes","enabled","useState","expanded","setExpanded","useExpanded","toggleExpanded","index","points","description","missionName","useMemo","letter","String","fromCharCode","toUpperCase","indexToMissionName","formattedExercise","ExpansionPanel","onChange","ExpansionPanelSummary","expandIcon","Typography","undefined","ExpansionPanelDetails","variantMapping","defaultMission","Missions","missions","Background","PersonalResponse","useAssistStyles","Assist","name","useAssistanceStyles","margin","Assistance","assistance","summary","spacer","marginTop","Translation","Vocabulary","button","Questions","questions","fullQuestion","idx","line","question","trim","SHOP","image","ship","price","toga","column","harp","helmet","ladle","owl","peacock","shield","sword","jar","ASSISTANCE","getTranslationMissions","lines","LEVEL","NAME","ID","TEXTS","HOME_TEXT","EXERCISES","title","password","options","unlock","Button","variant","onClick","unlockShop","alert","setUnlockShop","PASSWORD_IMAGE","SHOP_DESCRIPTION","MAIN_COLOUR","getDefaultMissions","LEVELS","GCSE","ALEVEL","ALEVELTEXTS","GCSETEXTS","getTextForMode","mode","selectedLevel","selectedText","getHomeResources","teacher","getHomeTextForMode","getExerciseResources","getPasswordImageForMode","getMainColourForMode","evaluatePassword","unlockables","newPassword","toLowerCase","currentPassword","exercises","newExerciseIndex","findIndex","currentExerciseIndex","isNew","isUsed","EXERCISE_ID","Exercise","navigation","exerciseObj","currentView","getExerciseResource","id","root","position","container","width","whiteboard","left","top","wordWrap","height","Home","src","alt","textField","marginLeft","marginRight","paperContainer","minWidth","maxWidth","paddingTop","Password","setPassword","handleChange","useCallback","event","value","submitPassword","enterPassword","Paper","TextField","label","onKeyPress","ev","disabled","tile","maxHeight","minHeight","Shop","contents","getShopContents","component","GridList","cellHeight","GridListTile","GridListTileBar","subtitle","IDS","HOME_ID","SHOP_ID","PASSWORD_ID","getExerciseId","commandSubject","Subject","command$","asObservable","subCommandSubject","subCommand$","applySubstate","newSubstate","next","command","state","changeModeSubject","changeMode$","changeMode","navigate","nextView","navigateExercise","navigateHome","navigateShop","navigatePassword","showChangeModePrompt","open","showPrompt","setMode","shopUnlocked","toggleTheme","formattedPassword","getModeState","localState","homeButton","appBar","backgroundColor","paper","primary","AppToolbar","usingDarkTheme","levelTitle","level","getTitleForLevel","textTitle","TEXT","getTitleForText","AppBar","Toolbar","IconButton","aria-label","noWrap","borderRightColor","divider","borderRightStyle","borderRightWidth","AppDrawer","unlockedIndex","latestPassword","getExerciseIndexForPassword","List","subheader","ListSubheader","ListItem","ListItemIcon","ListItemText","Divider","Content","View","getView","modalContainer","boxShadow","shadows","modalContent","formControl","settingLabel","textAlign","marginBottom","alignRight","Settings","pendingLevel","pendingText","setState","useEffect","handleLevelChange","handleTextChange","handleSave","handleClose","getTextOptions","Modal","disableBackdropClick","disableEscapeKeyDown","FormControl","Select","native","inputProps","STORE_KEY","defaultState","queryString","parse","window","location","search","clearEverything","confirm","localStorage","removeItem","store$","storeSubject","BehaviorSubject","cached","getItem","JSON","e","console","log","loadPersistedState","forEach","loadState","pipe","skip","subscribe","setItem","stringify","merge","withLatestFrom","store","newLocalState","ReactDOM","render","ready","setReady","subscription","unsubscribe","contrastThreshold","tonalOffset","createMuiTheme","CssBaseline","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f2fb6c37.chunk.js","sourcesContent":["import { makeStyles, Theme } from '@material-ui/core';\n\nexport type DefaultClasses = {\n  hbox: string,\n  vbox: string,\n  centered: string,\n  grow: string,\n  fixed: string,\n  scroll: string,\n  noOverflow: string,\n  link: string,\n  buttonArea: string,\n  compulsory: string\n}\n\nexport function classNames(...classNames: string[]) {\n  return classNames.join(' ');\n}\n\nexport const useDefaultStyles = makeStyles((theme: Theme) => ({\n  hbox: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    flexShrink: 1\n  },\n  vbox: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    flexShrink: 1\n  },\n  centered: {\n    alignItems: 'center'\n  },\n  grow: {\n    flexShrink: 1,\n    flexGrow: 1\n  },\n  fixed: {\n    flexGrow: 0,\n    flexShrink: 0\n  },\n  scroll: {\n    overflow: 'overlay'\n  },\n  noOverflow: {\n    overflow: 'hidden'\n  },\n  link: {\n    color: theme.palette.type === 'dark' ? theme.palette.secondary.light : theme.palette.secondary.dark\n  },\n  buttonArea: {\n    background: theme.palette.background.default,\n    padding: theme.spacing(1),\n    justifyContent: 'flex-end'\n  },\n  compulsory: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.secondary.main,\n    fontWeight: 800\n  }\n}));","const ALIASES = {\n  'quizlet.com': 'Quizlet',\n  'memrise.com': 'Memrise',\n  'storyboardthat.com': 'Storyboard That',\n  'goconqr.com': 'Goconqr',\n  'kami.app': 'Kami',\n  'drive.google.com': 'GoogleDrive'\n}\n\nexport function getAlias(text: string): string {\n  const match = Object.keys(ALIASES).find(matchText => text.includes(matchText));\n  if (!!match) {\n    return ALIASES[match];\n  }\n  return text;\n}","import { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, Link, makeStyles, Theme, Typography } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport React, { useMemo, useState } from 'react';\n\nimport { MissionExercise, Mission as MissionType } from '../../types/mission';\nimport { getAlias } from '../../utils/hyperlink-aliaser';\nimport { useDefaultStyles } from '../../utils/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  }\n}));\n\nconst URL_REGEX = /(https?:\\/\\/[^\\s]+)/g;\n\nfunction indexToMissionName(index: number): React.ReactElement {\n  const letter = String.fromCharCode(97 + index).toUpperCase();\n  return <strong>Mission {letter}</strong>;\n}\n\nfunction useExpanded(enabled: boolean): [boolean, () => void] {\n  const [expanded, setExpanded] = useState(false);\n  return [expanded, () => setExpanded(!!enabled ? !expanded : expanded)]\n}\n\nfunction addHyperlinks(exercise: MissionExercise, defaultClasses): React.ReactElement {\n  if (React.isValidElement(exercise)) {\n    return exercise;\n  }\n  try {\n    const parts = exercise.split(URL_REGEX);\n    const elements = parts.map(part => part.startsWith('http') ? <Link className={defaultClasses.link} key={part} rel='noopener noreferrer' target='_blank' href={part}>{getAlias(part)}</Link> : part);\n    return <React.Fragment>{elements}</React.Fragment>;\n  } catch (err) {\n    return <React.Fragment>{exercise}</React.Fragment>;\n  }\n}\n\nexport default function Mission(mission: MissionType) {\n  const classes = useStyles();\n  const defaultClasses = useDefaultStyles();\n  const [expanded, toggleExpanded] = useExpanded(!!mission.exercise);\n\n  const { index, points, description, exercise, compulsory } = mission;\n\n  const missionName = useMemo(() => indexToMissionName(index), [index]);\n  const formattedExercise = useMemo(() => exercise ? addHyperlinks(exercise, defaultClasses) : <React.Fragment />, [exercise, defaultClasses]);\n\n  return (\n    <ExpansionPanel expanded={expanded} onChange={() => toggleExpanded()}>\n      <ExpansionPanelSummary expandIcon={!!exercise ? <ExpandMoreIcon /> : <RemoveIcon />}>\n        <Typography className={classes.heading}>{missionName} {!!points ? `(${points} Nectar Points)` : undefined }</Typography>\n        {!!compulsory ? <Typography className={defaultClasses.compulsory}>(Compulsory)&nbsp;</Typography> : undefined}\n        {React.isValidElement(description) ? description : <Typography className={classes.secondaryHeading}>{description}</Typography>}\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Typography color='textPrimary' variantMapping={{'body1': 'div'}}>\n        {formattedExercise}\n        </Typography>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}","import React from 'react';\n\nimport { PartialMission as MissionType } from '../../types/mission';\nimport { useDefaultStyles } from '../../utils/styles';\nimport Mission from './Mission';\n\ntype Props = {\n  missions: MissionType[]\n};\n\nconst defaultMission = {\n  index: 0,\n  points: 0,\n  description: '',\n  exercise: undefined,\n  compulsory: false\n};\n\nexport default function Missions({missions}: Props) {\n  const classes = useDefaultStyles();\n  return (\n    <div className={classes.grow}>\n      {missions.map(({description, points, exercise, compulsory}, index) => <Mission \n        key={index}\n        points={points || defaultMission.points}\n        description={description || defaultMission.description}\n        exercise={exercise || defaultMission.exercise}\n        compulsory={compulsory || defaultMission.compulsory}\n        index={index}\n        />)}\n    </div>\n  );\n}","import React from 'react';\nimport Missions from './Missions';\nimport { PartialMission as MissionType } from '../../types/mission';\n\ntype Props = {\n  missions: MissionType[]\n};\n\nexport default function Background({missions}: Props) {\n  return <Missions missions={missions} />;\n}","import React from 'react';\n\nimport { PartialMission as MissionType } from '../../types/mission';\nimport Missions from './Missions';\n\ntype Props = {\n  missions: MissionType[]\n};\n\nexport default function PersonalResponse({missions}: Props) {\n  return <Missions missions={missions} />;\n}","import { ExpansionPanel, ExpansionPanelSummary, makeStyles, Theme, Typography } from '@material-ui/core';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\nimport React from 'react';\n\nimport { Assistance as AssistanceType, Assist as AssistType } from '../../types/assistance';\n\nconst useAssistStyles = makeStyles((theme: Theme) => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction Assist({name, points, description}: AssistType) {\n  const classes = useAssistStyles();\n  return (\n    <ExpansionPanel expanded={false}>\n      <ExpansionPanelSummary expandIcon={<LocalAtmIcon />}>\n        <Typography className={classes.heading}>{name} (Pay {points} Nectar Points)</Typography>\n        <Typography className={classes.secondaryHeading}>{description}</Typography>\n      </ExpansionPanelSummary>\n    </ExpansionPanel>\n  );\n}\n\nconst useAssistanceStyles = makeStyles((theme: Theme) => ({\n  description: {\n    margin: theme.spacing(1)\n  }\n}));\n\ntype Props = {\n  assistance: AssistanceType\n};\n\nexport default function Assistance({assistance}: Props) {\n  const classes = useAssistanceStyles();\n  return (\n    <div>\n      <Typography className={classes.description}>{assistance.description}</Typography>\n      {assistance.assistance.map(({name, points, description}, index) => <Assist key={index} name={name} points={points} description={description} />)}\n    </div>\n  );\n}","import { makeStyles, Theme, Typography } from '@material-ui/core';\nimport React from 'react';\n\nimport { Assistance as AssistanceType } from '../../types/assistance';\nimport { PartialMission as MissionType } from '../../types/mission';\nimport { useDefaultStyles } from '../../utils/styles';\nimport Assistance from './Assistance';\nimport Missions from './Missions';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  summary: {\n    margin: theme.spacing(1)\n  },\n  spacer: {\n    marginTop: 40\n  }\n}));\n\ntype Props = {\n  missions: MissionType[],\n  summary?: string,\n  assistance: AssistanceType\n};\n\nexport default function Translation ({missions, summary, assistance}: Props) {\n  const classes = useStyles();\n  const defaultClasses = useDefaultStyles();\n  return (\n    <div className={defaultClasses.grow}>\n      <Typography className={classes.summary}>{summary}</Typography>\n      <Missions missions={missions} />\n      <div className={classes.spacer} />\n      {!!assistance ? <Assistance assistance={assistance} /> : undefined}\n    </div>\n  );\n}","import React from 'react';\n\nimport { PartialMission as MissionType } from '../../types/mission';\nimport Missions from './Missions';\n\ntype Props = {\n  missions: MissionType[]\n};\n\nexport default function Vocabulary({missions}: Props) {\n  return <Missions missions={missions} />;\n}","import { Button, makeStyles, Theme, Typography } from '@material-ui/core';\nimport React from 'react';\n\nimport { unlockShop } from '../../persistence/state';\nimport { Option } from '../../types/shop';\nimport { useDefaultStyles } from '../../utils/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\ntype Props = {\n  description: string,\n  options: Option[]\n}\n\nfunction setUnlockShop(unlock: boolean) {\n  if (unlock) {\n    unlockShop();\n    alert('You have unlocked the shop!');\n  } else {\n    alert('No problem!');\n  }\n}\n\nexport default function Shop({description, options}: Props) {\n  const classes = useStyles();\n  const defaultClasses = useDefaultStyles();\n  return (\n  <div className={defaultClasses.vbox}>\n    <Typography>{description}</Typography>\n    {options.map(({description, unlock}) => <Button key={description} variant='contained' color='primary' className={classes.button} onClick={() => setUnlockShop(unlock)}>{description}</Button>)}\n  </div>\n  );\n  \n}\n","import React from 'react';\n\nimport { Question as QuestionType } from '../../types/question';\n\ntype Props = {\n  questions: QuestionType[]\n};\n\nexport default function Questions({questions}: Props) {\n  return (\n    <ol>\n      {questions.map((fullQuestion, idx) => {\n        if (React.isValidElement(fullQuestion)) {\n          return <React.Fragment key={idx}>{fullQuestion}</React.Fragment>;\n        }\n        const [line, question] = fullQuestion.split(':');\n        return (<li key={idx}><strong>{!!question ? `${line}: ` : ''}</strong>{!!question ? question.trim() : fullQuestion}</li>);\n      })}\n    </ol>\n  );\n}","import React from 'react';\n\nimport { column, harp, helmet, jar, ladle, owl, peacock, scroll, shield, ship, sword, toga } from '../../../assets/alevel/satires';\nimport { pigeon as PASSWORD_IMAGE } from '../../../assets/password';\nimport { Text } from '../../../types/exercise';\nimport { PartialMission as MissionType } from '../../../types/mission';\nimport { Question as QuestionType } from '../../../types/question';\nimport { Background, PersonalResponse, Shop, Translation, Vocabulary } from '../../components';\nimport Questions from '../../components/Questions';\n\nexport const SHOP = [\n  { name: 'Ship', image: ship, price: 1400},\n  { name: 'Toga', image: toga, price: 700},\n  { name: 'Column', image: column, price: 1200},\n  { name: 'Lyre', image: harp, price: 700},\n  { name: 'Helmet', image: helmet, price: 800},\n  { name: 'Ladle', image: ladle, price: 400},\n  { name: 'Pet Owl', image: owl, price: 900},\n  { name: 'Peacock', image: peacock, price: 500},\n  { name: 'Scroll', image: scroll, price: 600},\n  { name: 'Shield', image: shield, price: 800},\n  { name: 'Sword', image: sword, price: 800},\n  { name: 'Jar of Wine', image: jar, price: 500}\n];\n\nexport const SHOP_DESCRIPTION = '';\n\nexport const HOME_TEXT = (\n  <React.Fragment>\n    <p>\n    You are Horace. You wake up drunk from last night’s symposium with your fellow poets. You had written some really good lines of poetry. Philosophical too! But you just can’t recall what you wrote. \n    And wait, who even are you again? I bet Virgil accidentally hit you on the head with an amphora again. Now’s the time to act, speak and think like Horace.\n    </p>\n    <p>\n    You do not need to carry out every task.\n    But you must complete <strong>at least one</strong> activity from each section in order to gain a prompt. These prompts are needed to summon the messenger pigeon who will have your next mission. Oh, and it would be useful to know that sometimes you might stumble across compulsory tasks – if you don’t do these, you can’t move on!\n    </p>\n    <p>\n    On your way, you should aim to collect as many Nectar Points as possible. Nectar is surely just like the finest wine. You don’t know when they’ll help you to worm out of a situation!\n    Don’t forget to keep a record of things in your journal! They might make good poetry material. Now hurry on your way Horace, you don’t want to be late for the end of term symposium!\n    </p>\n  </React.Fragment>\n);\n\nexport const ASSISTANCE = {\n  description: 'Virgil feels bad about what he’s done to you. He has offered you some help. He has a couple of items which will provide great assistance. But he obviously doesn’t feel too bad, because he’s not giving it to you unless you give him some Nectar first!',\n  assistance: [\n    {\n      name: 'Numbered text',\n      points: 200,\n      description: 'The Latin words are numbered for ease of translation.'\n    },\n    {\n      name: 'Colour-coded text',\n      points: 100,\n      description: 'Different categories of words will be colour-coded for ease of identification. Eg. All verbs will be highlighted in the same colour, all nominatives in a different colour, etc.'\n    }\n  ]\n};\n\nfunction getTranslationMissions(lines: string, questions: QuestionType[]): MissionType[] {\n  return [\n    {points: 400, description: `Translate lines ${lines}`, compulsory: true},\n    {points: 300, description: `Make a storyboard/cartoon strip for lines ${lines}.`, exercise: 'You may wish to use https://www.storyboardthat.com'},\n    {points: 200, description: `Answer the questions below which are based on lines ${lines}.`, exercise: <Questions questions={questions} />},\n    {points: 200, description: `Draw a picture which summarises lines ${lines} and add captions.`},\n    {points: 100, description: `Write a summary of lines ${lines}.`},\n  ];\n}\n\nexport const EXERCISES = [\n  {\n    title: 'Satire 1.1 - Background – Introduction',\n    password: 'HAPPINESS',\n    exercise: (\n      <Background \n      missions={[\n        {points: 500, description: 'Answer questions based on textbook info.', exercise: <Questions questions={[\n          <strong>Horace and his times</strong>,\n          'When was Horace born? What sort of family status was he born into?',\n          'Briefly explain the political situation at Rome at the time?',\n          'When did Horace’s circumstances essentially change?',\n          'Of what status was Horace’s father? How did this effect Horace?',\n          'What significant links did Horace have with some of his contemporaries?',\n          'What were some of Horace’s earlier works? Give a brief description of them.',\n          'When did Horace die?',\n          <br />,\n          <strong>Maecenas</strong>,\n          'Why did many political figures in the Classical world have a “wise man” sidekick?',\n          'Who was Maecenas? Why was he important during Horace’s time?',\n          'Briefly explain Maecenas’ political importance.',\n          'What was the point of patronage?',\n          'What was Horace’s financial situation?',\n          'How does J.Griffin put across the relationship between Maecenas and his clients? What does this mean?',\n          'What philosophical beliefs did Maecenas exhibit?',\n          <br />,\n          <strong>Satire</strong>,\n          'What tone does satire have?',\n          'What appears to be the aim of satire?',\n          'What illustration is apt for satire?',\n          'What two factors does it try to achieve? Yet why can it not fit wholly into either category?',\n          'What topics might satire include?',\n          <br />,\n          <strong>Satire before Horace</strong>,\n          'How did the genre of Satire come about?',\n          'Briefly describe Gaius Lucilius’ Saturae.',\n          'Briefly describe Varro’s satires.',\n          'What was the Greek diatribe? What part did it play in the evolution of satire?',\n          'Briefly describe Persius’ satires.',\n          'Briefly describe Juvenal’s satires.',\n          <br />,\n          <strong>Horace’s Style of Satire</strong>,\n          'What title did Horace give his satires?',\n          'What tone does Horace’s satires take?',\n          'What are some topics that Horace includes?',\n          'What styles did Horace put his hand to in his satires?',\n          'Summarise what Book 1 contains. What are some well-known episodes from the other seven books?',\n          'What common satirical themes emerge from Horace’s satires?',\n          'What makes Horace’s satires so literarily appealing?',\n          'How do Horace’s satires differ from those of others?',\n          <br />,\n          <strong>The Philosophical Background</strong>,\n          'What was supposed to be the point of philosophy for ancients?',\n          'What part does philosophy play in Horace’s satires?',\n          'Explain Stoic beliefs.',\n          'Explain Cynic beliefs.',\n          'Explain Epicurean beliefs.',\n          <br />,\n          <strong>Metre</strong>,\n          'What metre is verse satire written in?'\n        ]} />},\n        {points: 400, description: 'Make a mind map based on the background information in textbook.', exercise: 'Feel free to use https://www.goconqr.com'},\n        {points: 300, description: 'Create a story board for a well-known episode from any of Horace’s Satires.', exercise: 'Feel free to use https://www.storyboardthat.com'}\n      ]}\n      />\n    )\n  },\n  {\n    title: 'Satire 1.1 - Translation (Lines 1-12, 28-44)',\n    password: 'fortunatemerchants',\n    exercise: (\n      <Translation\n      assistance={ASSISTANCE}\n      summary='Well done for remembering your family background, your patron and your beloved genre of Satire - so Romanesque! But that is not the end of your quest. You must continue on and find out who you are at your core. What values do you hold dear? See what you can find.'\n      missions={getTranslationMissions('1-12, 28-44', [\n        'What two “types” of destinies do people generally have?',\n          'According to Horace, how do people feel about these two “types” of destinies? What would people rather do?',\n          'Horace uses two pairs of examples containing contrasting characters. Explain how each of the following people feel about their lives:',\n          <ul>\n            <li>The soldier</li>\n            <li>The merchant</li>\n            <li>The farmer</li>\n            <li>The legal expert</li>\n          </ul>,\n          'What single goal are the innkeeper, soldier and sailor united in?',\n          'What extended simile does Horace use to illustrate this? What makes this simile effective?',\n          'How does the ant differ from “you” – the miser?',\n          'What question does Horace direct at the miser? What irony is there in this?',\n          'What response from the miser does Horace anticipate?',\n          'What does Horace say in being the devil’s advocate?'\n      ])}\n      />\n    )\n  },\n  {\n    title: 'Satire 1.1 - Vocabulary (Lines 1-12, 28-44)',\n    password: 'whoneedsriches',\n    exercise: (\n      <Vocabulary\n      missions={[\n        {points: 300, description: 'Complete Quizlet/Memrise “Learn” function.', exercise: 'https://quizlet.com/_688r9s?x=1jqt&i=nczxg https://www.memrise.com/group/319698/ (Print screen or photograph results as evidence)'},\n        {points: 300, description: 'Make vocabulary/phrase flashcards for this passage.'},\n        {points: 100, description: 'Complete the gaps by translating the vocabulary.', exercise: 'Retrieve sheet from: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'}\n      ]}\n      />\n    )\n  },\n  {\n    title: 'Satire 1.1 - Personal Response (Lines 1-12, 28-44)',\n    password: 'teenyweenyant',\n    exercise: (\n      <PersonalResponse \n      missions={[\n        {points: 400, description: 'Add style & content annotations to Kami document.', exercise: 'Access at: https://kami.app/opuBjji5yocm', compulsory: true},\n        {points: 300, description: 'Write an answer to 15-mark context & style question.', exercise: 'Please find the question in GoogleDrive folder: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'},\n        {points: 100, description: 'Fill in your journal. You may wish to answer the prompt questions below and note down any other thoughts you have.', exercise: <Questions questions={[\n          'What has happened?',\n          'How do you feel?',\n          'How are these things accentuated through the text?'\n        ]} />}\n      ]}\n      />\n    )\n  },\n  {\n    title: 'Satire 1.1 - Translation (Lines 45-73)',\n    password: 'itsofftoworkwego',\n    exercise: (\n      <Translation\n      assistance={ASSISTANCE}\n      missions={getTranslationMissions('45-73', [\n        'What reason is given as to why there’s no point in having a “piled-up heap” of goods?',\n        'What illustrations are raised to back up Horace’s point?',\n        'What answer does Horace foresee and raise?',\n        'What rhetorical question is expressed?',\n        'Explain Horace’s point using the example of water.',\n        'What might happen to someone who is too greedy for water?',\n        'In what way is someone who only takes what he needs better off than someone who is greedy?',\n        'What happens to many people?',\n        'According to some people, what defines a person?',\n        'Who is this “certain man in Athens” who features here?',\n        'Explain how this “certain man in Athens” lives?',\n        'Explain the myth of Tantalus. Why is his story relevant here?',\n        'Describe the image of the miser which Horace paints.',\n        'What question is posed?'\n      ])}\n      />\n    )\n  },\n  {\n    title: 'Satire 1.1 - Vocabulary (Lines 45-73)',\n    password: 'grainabix',\n    exercise: (\n      <Vocabulary\n      missions={[\n        {points: 300, description: 'Complete Quizlet/Memrise “Learn” function.', exercise: 'https://quizlet.com/_7xegek?x=1jqt&i=nczxg https://www.memrise.com/group/319698/ (Print screen or photograph results as evidence)'},\n        {points: 300, description: 'Make vocabulary/phrase flashcards for this passage.'},\n        {points: 100, description: 'Complete the gaps by translating the vocabulary.', exercise: 'Retrieve sheet from: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'}\n      ]}\n      />\n    )\n  },\n  {\n    title: 'Satire 1.1 - Personal Response (Lines 45-73)',\n    password: 'mehmoney',\n    exercise: (\n      <PersonalResponse \n      missions={[\n        {points: 400, description: 'Add style & content annotations to Kami document.', exercise: 'Access at: https://kami.app/opuBjji5yocm', compulsory: true},\n        {points: 300, description: 'Write an answer to 15-mark context & style question.', exercise: 'Please find the question in GoogleDrive folder: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'},\n        {points: 200, description: 'Write an answer to the “Top 3 Points” question.', exercise: 'Please find the question in GoogleDrive folder: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'},\n        {points: 100, description: 'Fill in your journal. You may wish to answer the prompt questions below and note down any other thoughts you have.', exercise: <Questions questions={[\n          'What has happened?',\n          'How do you feel?',\n          'How are these things accentuated through the text?'\n        ]} />}\n      ]}\n      />\n    )\n  },\n  {\n    title: 'Satire 1.1 - Translation (Lines 74-100)',\n    password: 'toberichornottobe',\n    exercise: (\n      <Translation\n      assistance={ASSISTANCE}\n      missions={getTranslationMissions('74-100', [\n        'According to Horace, what can money buy?',\n        'If one cannot buy these things, what would happen?',\n        'Describe how a miser lives.',\n        'What situation does a miser think his money will be useful in? Why might it be useful then?',\n        'Rather, what is the reality?',\n        'What comparison does Horace make?',\n        'What suggestion does Horace put forward and why?',\n        'Summarise the story of Ummidius.',\n        'What might be interesting about the inclusion of Ummidius in this poem?'\n      ])}\n      />\n    )\n  },\n  {\n    title: 'Satire 1.1 - Vocabulary (Lines 74-100)',\n    password: 'crazyladyontheloose',\n    exercise: (\n      <Vocabulary\n      missions={[\n        {points: 300, description: 'Complete Quizlet/Memrise “Learn” function.', exercise: 'https://quizlet.com/_7xjfy6?x=1jqt&i=nczxg https://www.memrise.com/group/319698/ (Print screen or photograph results as evidence)'},\n        {points: 300, description: 'Make vocabulary/phrase flashcards for this passage.'},\n        {points: 100, description: 'Complete the gaps by translating the vocabulary.', exercise: 'Retrieve sheet from: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'}\n      ]}\n      />\n    )\n  },\n  {\n    title: 'Satire 1.1 - Personal Response (Lines 74-100)',\n    password: 'RIPUmmidius',\n    exercise: (\n      <PersonalResponse \n      missions={[\n        {points: 400, description: 'Add style & content annotations to Kami document.', exercise: 'Access at: https://kami.app/opuBjji5yocm', compulsory: true},\n        {points: 400, description: 'Write an answer to 15-mark context & style question.', exercise: 'Please find the question in GoogleDrive folder: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'},\n        {points: 100, description: 'Fill in your journal. You may wish to answer the prompt questions below and note down any other thoughts you have.', exercise: <Questions questions={[\n          'What has happened?',\n          'How do you feel?',\n          'How are these things accentuated through the text?'\n        ]} />}\n      ]}\n      />\n    )\n  },\n  {\n    title: 'taberna optima',\n    password: 'westfield',\n    exercise: (\n      <Shop\n      description='You’re making your way to Maecenas’ dinner party. It’s a poet party tonight – all of the best will be there! Oh, what’s this? You don’t recall seeing that being there before, ever. A shop…?'\n      options={[\n        {description: 'It doesn’t look that interesting anyway. Maybe another time.', unlock: false},\n        {description: 'It’s only the eleventh hour, why don’t you go in and have a quick look?', unlock: true},\n        {description: 'It’s all about the party. Who cares about this strange shop?', unlock: false}\n      ]}\n      />\n    )\n  },\n  {\n    title: 'Satire 1.3 - Translation (Lines 25-52)',\n    password: 'yourewrong',\n    exercise: (\n      <Translation\n      assistance={ASSISTANCE}\n      missions={getTranslationMissions('25-52', [\n        'What criticism does Horace make of people?',\n        'Why should someone not act in this way?',\n        'Describe the appearance of the character whom Horace gives a sketch of.',\n        'Why should one not “judge a book by its cover”?',\n        'What does Horace urge “you” to reflect on? What illustration does he give as to why people should reflect?',\n        'Explain how one views his lover’s faults?',\n        'Explain how a father views his son’s faults?',\n        'What examples does Horace give as to how fathers name their sons?',\n        'What is effective about the choice of vocabulary which Horace uses in this passage about the father naming his son?'\n      ])}\n      />\n    )\n  },\n  {\n    title: 'Satire 1.3 - Vocabulary (Lines 25-52)',\n    password: 'morefaultsandwarts',\n    exercise: (\n      <Vocabulary\n      missions={[\n        {points: 300, description: 'Complete Quizlet/Memrise “Learn” function.', exercise: 'https://quizlet.com/_7xjfy6?x=1jqt&i=nczxg https://www.memrise.com/group/319698/ (Print screen or photograph results as evidence)'},\n        {points: 300, description: 'Make vocabulary/phrase flashcards for this passage.'},\n        {points: 200, description: 'Complete the gaps by translating the vocabulary into Latin.', exercise: 'Retrieve sheet from: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'},\n        {points: 100, description: 'Complete the gaps by translating the vocabulary into English.', exercise: 'Retrieve sheet from: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'}\n      ]}\n      />\n    )\n  },\n  {\n    title: 'Satire 1.3 - Personal Response (Lines 25-52)',\n    password: 'badfriend',\n    exercise: (\n      <PersonalResponse \n      missions={[\n        {points: 400, description: 'Add style & content annotations to Kami document.', exercise: 'Access at: https://kami.app/hpjrfgGCUeCN', compulsory: true},\n        {points: 400, description: 'Write an answer to 15-mark context & style question.', exercise: 'Please find the question in GoogleDrive folder: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'},\n        {points: 200, description: 'Write an answer to the “Top 3 Points” question.', exercise: 'Please find the question in GoogleDrive folder: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'},\n        {points: 100, description: 'Fill in your journal. You may wish to answer the prompt questions below and note down any other thoughts you have.', exercise: <Questions questions={[\n          'What has happened?',\n          'How do you feel?',\n          'How are these things accentuated through the text?'\n        ]} />}\n      ]}\n      />\n    )\n  },\n  {\n    title: 'Satire 1.3 - Translation (Lines 53-75)',\n    password: 'hypocrite',\n    exercise: (\n      <Translation\n      assistance={ASSISTANCE}\n      missions={getTranslationMissions('53-75', [\n        'What is it that preserves friendships according to Horace?',\n        'On the contrary to this, how do people usually act?',\n        'What examples of this type of behaviour does Horace give? (Give four examples)',\n        'What personal experience does Horace bring up?',\n        'What realisation does Horace come to?',\n        'What profound truth does Horace present?',\n        'What should a “sweet friend” do?',\n        'What mutual understanding should there be between friends?'\n      ])}\n      />\n    )\n  },\n  {\n    title: 'Satire 1.3 - Vocabulary (Lines 53-75)',\n    password: 'stainthecleanjar',\n    exercise: (\n      <Vocabulary\n      missions={[\n        {points: 300, description: 'Complete Quizlet/Memrise “Learn” function.', exercise: 'https://quizlet.com/_7xjfy6?x=1jqt&i=nczxg https://www.memrise.com/group/319698/ (Print screen or photograph results as evidence)'},\n        {points: 300, description: 'Make vocabulary/phrase flashcards for this passage.'},\n        {points: 200, description: 'Complete the gaps by translating the vocabulary into Latin.', exercise: 'Retrieve sheet from: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'},\n        {points: 100, description: 'Complete the gaps by translating the vocabulary into English.', exercise: 'Retrieve sheet from: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'}\n      ]}\n      />\n    )\n  },\n  {\n    title: 'Satire 1.3 - Personal Response (Lines 53-75)',\n    password: 'pleaseforgiveme',\n    exercise: (\n      <PersonalResponse \n      missions={[\n        {points: 400, description: 'Add style & content annotations to Kami document.', exercise: 'Access at: https://kami.app/hpjrfgGCUeCN', compulsory: true},\n        {points: 400, description: 'Write an answer to 15-mark context & style question.', exercise: 'Please find the question in GoogleDrive folder: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'},\n        {points: 200, description: 'Write an answer to the “Top 3 Points” question.', exercise: 'Please find the question in GoogleDrive folder: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'},\n        {points: 100, description: 'Fill in your journal. You may wish to answer the prompt questions below and note down any other thoughts you have.', exercise: <Questions questions={[\n          'What has happened?',\n          'How do you feel?',\n          'How are these things accentuated through the text?'\n        ]} />}\n      ]}\n      />\n    )\n  },\n  {\n    title: 'Satire 2.2 - Translation (Lines 1-30)',\n    password: 'imhungry',\n    exercise: (\n      <Translation\n      assistance={ASSISTANCE}\n      missions={getTranslationMissions('1-30', [\n        'What does Horace think is virtuous and great?',\n        'Who is Ofellus?',\n        'What does Horace think is the effect of gleaming tables full of various dishes?',\n        'When does Horace want to discuss this topic?',\n        'What similes does Horace use to explain why this topic should be discussed at this point in the day? What is the reason that it should be discussed at this time?',\n        'What attitude does Horace think that someone who is extremely hungry would not have?',\n        'According to Horace, when do we feel the most pleasure in our food?',\n        'What exotic foods does Horace mention and what does he say about them?',\n        'What is Horace’s argument with chickens and peacocks?'\n      ])}\n      />\n    )\n  },\n  {\n    title: 'Satire 2.2 - Vocabulary (Lines 1-30)',\n    password: 'impossibletospellfishname',\n    exercise: (\n      <Vocabulary\n      missions={[\n        {points: 300, description: 'Complete Quizlet/Memrise “Learn” function.', exercise: 'https://quizlet.com/_873eg2?x=1jqt&i=nczxg https://www.memrise.com/group/319698/ (Print screen or photograph results as evidence)'},\n        {points: 300, description: 'Make vocabulary/phrase flashcards for this passage.'},\n        {points: 200, description: 'Complete the gaps by translating the vocabulary into Latin.', exercise: 'Retrieve sheet from: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'},\n        {points: 100, description: 'Complete the gaps by translating the vocabulary into English.', exercise: 'Retrieve sheet from: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'}\n      ]}\n      />\n    )\n  },\n  {\n    title: 'Satire 2.2 - Personal Response (Lines 1-30)',\n    password: 'yumsweatsauce',\n    exercise: (\n      <PersonalResponse \n      missions={[\n        {points: 400, description: 'Add style & content annotations to Kami document.', exercise: 'Access at: https://kami.app/vBcWcfScWDVP', compulsory: true},\n        {points: 400, description: 'Write an answer to 15-mark context & style question.', exercise: 'Please find the question in GoogleDrive folder: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'},\n        {points: 200, description: 'Write an answer to the “Top 3 Points” question.', exercise: 'Please find the question in GoogleDrive folder: https://drive.google.com/drive/folders/1Uk9cKJEr6p4VkO2ye5CQOOvVrVfX4a6K'},\n        {points: 100, description: 'Fill in your journal. You may wish to answer the prompt questions below and note down any other thoughts you have.', exercise: <Questions questions={[\n          'What has happened?',\n          'How do you feel?',\n          'How are these things accentuated through the text?'\n        ]} />}\n      ]}\n      />\n    )\n  },\n];\n\n\nexport default {\n  NAME: 'Satires',\n  ID: 'SATIRES',\n  HOME_TEXT,\n  EXERCISES,\n  PASSWORD_IMAGE,\n  SHOP,\n  SHOP_DESCRIPTION,\n  MAIN_COLOUR: '#3498db'\n} as Text","import { Level, Text } from '../../../types/exercise';\nimport satires from './satires';\n\nconst NAME: string = 'A-Level';\nconst ID: string = 'ALEVEL';\nexport const LEVEL: Level = { NAME, ID };\nexport const TEXTS: Text[] = [\n  satires\n];","import React from 'react';\n\nimport { hermes as PASSWORD_IMAGE } from '../../../assets/password';\nimport { Text } from '../../../types/exercise';\nimport { PartialMission as MissionType } from '../../../types/mission';\nimport { Question as QuestionType } from '../../../types/question';\nimport { Background, PersonalResponse, Translation, Vocabulary } from '../../components';\nimport Questions from '../../components/Questions';\n\nexport const HOME_TEXT = (\n  <React.Fragment>\n    <p>You are Aeneas. You wake up in the middle of the night because of a dreadful clamour. In a haste, you only manage to grab your journal. As you leave the room, in an attempt to stop you from helping the Trojans, Juno wipes your memory. You need to piece together what has happened to you so far and see where Fate takes you next. You need to act, speak and think like Aeneas.</p>\n    <p>From this point onwards, you, a great hero, will be faced with many tasks. You do not need to carry out every task. But you must complete <strong>at least one</strong> activity from each section in order to gain a prompt. These prompts are needed to summon Hermes (Mercury) who will deliver your next mission. Oh, and it would be useful to know that sometimes the gods may set you compulsory tasks – if you don’t do these, you can’t move on.</p>\n    <p>On your way, you should aim to collect as many Nectar Points as possible. You don’t know when you’ll need to use them to please the gods! The gods live off nectar, so I’m sure that they will come in handy.</p>\n    <p>Don’t forget to keep a record of things in your journal!</p>\n    <p>Now hurry on your way hero!</p>\n  </React.Fragment>\n);\n\nexport const ASSISTANCE = {\n  description: 'Venus has offered you some help. She has a couple of items which will provide great assistance. But, despite being your mother, deities are quite erratic. So, she’s not giving it to you unless you give her some Nectar first!',\n  assistance: [\n    {\n      name: 'Numbered text',\n      points: 200,\n      description: 'The Latin words are numbered for ease of translation.'\n    },\n    {\n      name: 'Colour-coded text',\n      points: 100,\n      description: 'Different categories of words will be colour coded for ease of identification. Eg. All verbs will be highlighted in the same colour, all nominatives in a different colour, etc.'\n    }\n  ]\n};\n\nfunction getDefaultMissions(lines: string, questions: QuestionType[]): MissionType[] {\n  return [\n    {points: 400, description: `Translate lines ${lines}`, compulsory: true},\n    {points: 300, description: `Make a storyboard/cartoon strip for lines ${lines}.`, exercise: 'You may wish to use https://www.storyboardthat.com'},\n    {points: 200, description: `Answer the questions below which are based on lines ${lines}.`, exercise: <Questions questions={questions} />},\n    {points: 200, description: `Draw a picture which summarises lines ${lines} and add captions.`},\n    {points: 100, description: `Write a summary of lines ${lines}.`},\n  ]\n}\n\nexport const EXERCISES = [\n  {\n    title: 'Background - The story of The Aeneid',\n    password: 'greekinvasion',\n    exercise: (\n      <Background \n      missions={[\n        {points: 300, description: 'Make a storyboard/cartoon strip for what has happened so far in the Aeneid (Book I-II, up to line 505)', exercise: 'Feel free to use https://www.storyboardthat.com'},\n        {points: 200, description: 'Write a summary of what has happened so far in the Aeneid (Book I-II, up to line 505).'},\n        {points: 100, description: 'Make a brief flowchart containing important events so far in the Aeneid (Book I-II, up to line 505).'}\n      ]} \n      />\n    )\n  },\n  {\n    title: 'Translation (Lines 506-525)',\n    password: 'wakeywakey',\n    exercise: (\n      <Translation\n      assistance={ASSISTANCE}\n      summary='Well done for remembering that Troy has been besieged for ten years now and for plucking up the courage (as a hero should) to go out and fight! Whilst going about the city, you catch a glimpse of something and hide to a side to watch...'\n      missions={getDefaultMissions('506-525', [\n        'Line 506: What does Aeneas recount next?',\n        'Lines 507-508: What state is Troy in at this point? Give three details.',\n        'Lines 508-511: What does Priam do and what makes this an incongruent image?',\n        'Lines 512-514: Describe the scene painted inside Priam’s palace.',\n        'Line 515: Who is Hecuba?',\n        'Lines 515-517: What simile is used to bring out Hecuba and her daughters’ situation?',\n        'Line 517: What are Hecuba and her daughters doing which is not described in the simile?',\n        'Lines 518-519: What does Hecuba see which prompts her to speak out?',\n        'Lines 519-520: What questions does Hecuba ask?',\n        'Lines 521-522: What does Hecuba say that the current situation does not call for?',\n        'Line 522: Who is Hector? Why does Hecuba bring him up at this point?',\n        'Lines 523-524: What command does Hecuba give Priam? What reason does she provide for giving this command?',\n        'Lines 524-525: What does Hecuba do when she finishes speaking?'\n      ])}\n      />\n    )\n  },\n  {\n    title: 'Vocabulary (Lines 506-525)',\n    password: 'hugthehouseholdgods',\n    exercise: (\n      <Vocabulary\n      missions={[\n        {points: 300, description: 'Complete Quizlet/Memrise “Learn” function.', exercise: 'https://quizlet.com/_7s8fzw?x=1jqt&i=nczxg https://www.memrise.com/group/384443/ (Print screen or photograph results as evidence)'},\n        {points: 300, description: 'Make vocabulary/phrase flashcards for this passage.'},\n        {points: 100, description: 'Complete the gaps by translating the vocabulary.'},\n\n      ]}\n      />\n    )\n  },\n  {\n    title: 'Personal Response (Lines 506-525)',\n    password: 'iwishhectorwashere',\n    exercise: (\n      <PersonalResponse \n      missions={[\n        {points: 300, description: 'Annotate the blank copy of this passage of text with at least 8 stylistic points of interest.', exercise: 'In your annotations, you must comment on any stylistic devices used and their effect.', compulsory: true},\n        {points: 300, description: 'Complete the examination-style questions for this passage.'},\n        {points: 300, description: 'Fill in your journal. You may wish to answer the prompt questions below and note down any other thoughts you have.', exercise: <Questions questions={[\n          'What memory have you recovered?',\n          'How do you feel knowing that?',\n          'How are these things accentuated through the text?'\n        ]} />},\n        {points: 200, description: 'Create a list of possible examination-style questions for this passage.'},\n      ]}\n      />\n    )\n  },\n  {\n    title: 'Translation (Lines 526-543)',\n    password: 'poorpolites',\n    exercise: (\n      <Translation\n      assistance={ASSISTANCE}\n      summary='You cannot rid your thoughts of that image of Hecuba and her daughters, all huddled around the altar. Will the gods really protect them? Oh, and seeing Priam, bent over but still putting on that armour… Wait, is that someone coming around the corner?'\n      missions={getDefaultMissions('526-543', [\n        'Lines 526-527: Who is Polites?',\n        'Lines 527-529: What is Polites doing when we first encounter him in the text?',\n        'Lines 529-530: What does Pyrrhus do to Polites?',\n        'Lines 531-532: What is particularly sad about the situation surrounding Polites’ death?',\n        'Line 533: What detail does Virgil add which foreshadows events of the near-future?',\n        'Lines 534-539: What does Priam ask of the gods?',\n        'Lines 540-541: Why does Priam mention Achilles at this moment? (What relevance does he have here?)',\n        'Lines 540-543: According to Priam, how is Achilles better than Pyrrhus?'\n      ])}\n      />\n    )\n  },\n  {\n    title: 'Vocabulary (Lines 526-543)',\n    password: 'poorpriam',\n    exercise: (\n      <Vocabulary\n      missions={[\n        {points: 300, description: 'Complete Quizlet/Memrise “Learn” function.', exercise: 'https://quizlet.com/_80a1tk?x=1jqt&i=nczxg https://www.memrise.com/group/384443/ (Print screen or photograph results as evidence)'},\n        {points: 300, description: 'Make vocabulary/phrase flashcards for this passage.'},\n        {points: 100, description: 'Complete the gaps by translating the vocabulary.'},\n      ]}\n      />\n    )\n  },\n];\n\nexport default {\n  NAME: 'Aeneid II',\n  ID: 'AENEID_II',\n  HOME_TEXT,\n  EXERCISES,\n  PASSWORD_IMAGE,\n  MAIN_COLOUR: '#2ecc71'\n} as Text;","import { Level, Text } from '../../../types/exercise';\nimport aeneid2 from './aeneid2';\nimport odyssey from './odyssey';\n\nexport const NAME: string = 'GCSE';\nexport const ID: string = 'GCSE';\nexport const LEVEL: Level = { NAME, ID };\nexport const TEXTS: Text[] = [\n  aeneid2,\n  // odyssey\n];","import { Level, Text } from '../../types/exercise';\nimport { LEVEL as ALEVEL, TEXTS as ALEVELTEXTS } from './alevel';\nimport { LEVEL as GCSE, TEXTS as GCSETEXTS } from './gcse';\n\nexport const LEVELS: Level[] = [\n  GCSE,\n  ALEVEL\n];\n\nexport const TEXTS = {\n  [ALEVEL.ID]: ALEVELTEXTS,\n  [GCSE.ID]: GCSETEXTS\n};\n\nexport function getTitleForLevel(level): string {\n  const LEVEL = LEVELS.find(({ID}) => ID === level);\n  return !!LEVEL ? LEVEL.NAME : level;\n}\n\nexport function getTitleForText({text, level}): string {\n  const texts = TEXTS[level] || [];\n  const TEXT = texts.find(({ID}) => ID === text)\n  return !!TEXT ? TEXT.NAME : text;\n}\n\nexport function getTextsForLevel(level: string | undefined): Text[] {\n  const texts: Text[] = !!level ? TEXTS[level] : [];\n  return texts || [];\n}","import { teacher } from '../assets/home';\nimport { TEXTS } from '../resources/exercises';\nimport { Exercise, Text } from '../types/exercise';\nimport { Storefront } from '../types/shop';\n\n// TODO Typings\n// TODO This will be better once the exercises are typed.\n\nfunction getTextForMode(mode): Text | undefined {\n  const levelTexts = TEXTS[mode.selectedLevel] || [];\n  return levelTexts.find(text => text.ID === mode.selectedText);\n}\n\nfunction getHomeTextForMode(mode) {\n  return getTextForMode(mode)?.HOME_TEXT;\n}\n\nexport function getHomeResources(mode) {\n  const image = teacher;\n  const text = getHomeTextForMode(mode);\n  return { image, text };\n}\n\nexport function getExerciseResources(mode): Exercise[] {\n  return getTextForMode(mode)?.EXERCISES || [];\n}\n\nexport function getExerciseResource({mode = {}, navigation}) {\n  const exercises = getExerciseResources(mode);\n  const exerciseObj = exercises.find(({title}) => title === navigation?.currentView?.title);\n  return !!exerciseObj ? exerciseObj.exercise : undefined;\n}\n\nexport function getPasswordImageForMode(mode): string | undefined {\n  return getTextForMode(mode)?.PASSWORD_IMAGE;\n}\n\nexport function getMainColourForMode(mode): string {\n  return getTextForMode(mode)?.MAIN_COLOUR || '#34495e';\n}\n\nexport function getShopContents(mode): Storefront {\n  const text = getTextForMode(mode);\n  const contents = text?.SHOP || [];\n  const description = text?.SHOP_DESCRIPTION || '';\n  return {\n    contents,\n    description\n  };\n}","import { Exercise } from '../types/exercise';\nimport { Mode, Unlockables } from '../types/state';\nimport { getExerciseResources } from './resource-loader';\n\ntype EvaluatePasswordInputProps = {\n  password: string,\n  mode: Mode,\n  unlockables: Unlockables\n};\n\ntype EvaluatePasswordOutputProps = {\n  isNew: boolean,\n  isUsed: boolean\n}\n\nexport function evaluatePassword({password, mode, unlockables}: EvaluatePasswordInputProps): EvaluatePasswordOutputProps {\n  const newPassword = password.toLowerCase();\n  const currentPassword = unlockables?.password;\n\n  // Work out if this password is a newer one than before.\n  const exercises = getExerciseResources(mode);\n  const newExerciseIndex = exercises.findIndex(({password = ''}) => password.toLowerCase() === newPassword);\n  const currentExerciseIndex = exercises.findIndex(({password = ''}) => password.toLowerCase() === currentPassword);\n\n  return {\n    isNew: newExerciseIndex > currentExerciseIndex,\n    isUsed: newExerciseIndex !== -1 && newExerciseIndex <= currentExerciseIndex\n  };\n}\n\ntype GetExerciseIndexForPasswordInputProps = {\n  password: string,\n  exercises: Exercise[]\n};\n\nexport function getExerciseIndexForPassword({password: latestPassword, exercises}: GetExerciseIndexForPasswordInputProps): number {\n  return exercises.findIndex(({password}) => password.toLowerCase() === latestPassword);\n}","import { useMemo } from 'react';\n\nimport { Mode, Navigation, View } from '../types/state';\nimport { getExerciseResource } from '../utils/resource-loader';\n\nexport const EXERCISE_ID: string = 'EXERCISE';\nexport const getExerciseId = (title: string): View => ({id: EXERCISE_ID, title });\n\ntype Props = {\n  mode: Mode,\n  navigation: Navigation\n};\n\nexport default function Exercise({mode, navigation}: Props) {\n  const exercise = useMemo(() => getExerciseResource({mode, navigation}), [mode, navigation]);\n  return exercise || null;\n}","import { makeStyles, Theme } from '@material-ui/core';\nimport React, { useMemo } from 'react';\n\nimport { Mode, View } from '../types/state';\nimport { getHomeResources } from '../utils/resource-loader';\n\nexport const ID: View = {id: 'HOME', title: 'Home'};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    position: 'relative'\n  },\n  container: {\n    position: 'relative'\n  },\n  teacher: {\n    display: 'block',\n    width: '100%'\n  },\n  whiteboard: {\n    position: 'absolute',\n    left: '7%',\n    top: '17%',\n    overflow: 'overlay',\n    fontSize: theme.typography.pxToRem(16),\n    wordWrap: 'break-word',\n    width: '46%',\n    height: '38%',\n    color: 'black'\n  }\n}));\n\ntype Props = {\n  mode: Mode\n};\n\nexport default function Home({mode}: Props) {\n  const classes = useStyles();\n  const { text, image } = useMemo(() => getHomeResources(mode), [mode]);\n  return (\n    <div className={classes.root}>\n      <div className={classes.container}>\n        <img className={classes.teacher} src={image} alt='teacher' />\n        <div className={classes.whiteboard}>\n        {text}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Button, makeStyles, Paper, TextField, Theme, Typography } from '@material-ui/core';\nimport React, { useCallback, useState } from 'react';\n\nimport { enterPassword } from '../persistence/state';\nimport { Mode, View } from '../types/state';\nimport { getPasswordImageForMode } from '../utils/resource-loader';\nimport { classNames, useDefaultStyles } from '../utils/styles';\n\nexport const ID: View = {id: 'PASSWORD', title: 'Enter Prompt'};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: 40\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  paperContainer: {\n    minWidth: 300,\n    maxWidth: 300,\n    height: 200,\n    paddingTop: 20\n  },\n  image: {\n    height: 200\n  }\n}));\n\ntype Props = {\n  mode: Mode\n};\n\nexport default function Password({mode}: Props) {\n  const [password, setPassword] = useState('');\n  const classes = useStyles();\n  const defaultClasses = useDefaultStyles();\n\n  const handleChange = useCallback((event) => setPassword(event.target.value), []);\n  const submitPassword = useCallback(() => {\n    enterPassword(password);\n    setPassword('');\n  }, [password]);\n\n  return (\n    <div className={classNames(classes.root, defaultClasses.hbox)}>\n      <Paper className={classNames(classes.paperContainer, defaultClasses.vbox)}>\n        <div className={classNames(defaultClasses.vbox, defaultClasses.centered)}>\n          <Typography variant='h6'>Please sign here</Typography>\n          <TextField\n          id='password'\n          label='Prompt'\n          type='password'\n          className={classes.textField}\n          value={password}\n          onChange={handleChange}\n          onKeyPress={ev => {\n            if (ev.key === 'Enter' && !!password) {\n              submitPassword();\n            }\n          }}\n          margin='normal'\n          variant='outlined'\n          />\n        </div>\n        <div className={classNames(defaultClasses.fixed, defaultClasses.hbox, defaultClasses.buttonArea)}>\n          <Button color='primary' onClick={submitPassword} disabled={!password} value='submit'>\n            Submit\n          </Button>\n        </div>\n      </Paper>\n      <img src={getPasswordImageForMode(mode)} alt='delivery' className={classes.image} />\n    </div>\n  );\n}","import { GridList, GridListTile, GridListTileBar, makeStyles, Theme, Typography } from '@material-ui/core';\nimport React, { useMemo } from 'react';\nimport { Item } from '../types/shop';\nimport { Mode, View } from '../types/state';\nimport { getShopContents } from '../utils/resource-loader';\n\nexport const ID: View = {id: 'SHOP', title: 'Shop'};\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    marginTop: theme.spacing(3)\n  },\n  tile: {\n    maxWidth: 200,\n    minWidth: 200,\n    maxHeight: 200,\n    minHeight: 200\n  }\n}));\n\ntype Props = {\n  mode: Mode\n};\n\nexport default function Shop({mode}: Props) {\n  const { contents, description } = useMemo(() => getShopContents(mode), [mode]);\n  const classes = useStyles();\n  return (\n  <div className={classes.root}>\n    <Typography variant=\"h5\" component=\"h2\">{description}</Typography>\n    <GridList cellHeight='auto'>\n      {contents.map(({image, name, price}: Item) => (\n        <GridListTile key={name} className={classes.tile}>\n          <img src={image} alt={name} />\n          <GridListTileBar\n            title={name}\n            subtitle={<span>Price: {price} NP</span>}\n          />\n        </GridListTile>\n      ))}\n    </GridList>\n  </div>\n  );\n}","import Exercise, { EXERCISE_ID, getExerciseId } from './Exercise';\nimport Home, { ID as HOME_ID } from './Home';\nimport Password, { ID as PASSWORD_ID } from './Password';\nimport Shop, { ID as SHOP_ID } from './Shop';\n\nexport const IDS = {\n  HOME_ID, SHOP_ID, PASSWORD_ID, getExerciseId\n};\n\nexport function getView(id = {}) {\n  switch(id.id) {\n    case HOME_ID.id: return Home;\n    case SHOP_ID.id: return Shop;\n    case PASSWORD_ID.id: return Password;\n    case EXERCISE_ID: return Exercise;\n    default: return Home;\n  }\n}","import { Subject, merge } from 'rxjs';\nimport { withLatestFrom } from 'rxjs/operators';\nimport { evaluatePassword } from '../utils/password';\nimport { IDS } from '../views';\nconst { HOME_ID, SHOP_ID, PASSWORD_ID, getExerciseId } = IDS;\n\n// Changes to the global state\nconst commandSubject = new Subject();\nconst command$ = commandSubject.asObservable();\n\n// Changes to the mode based state\nconst subCommandSubject = new Subject();\nconst subCommand$ = subCommandSubject.asObservable();\nconst applySubstate = (key, newSubstate) => subCommandSubject.next({key, command: state => ({...state, ...newSubstate})});\n\n// Changes to the mode setting\nconst changeModeSubject = new Subject();\nconst changeMode$ = changeModeSubject.asObservable();\nconst changeMode = mode => changeModeSubject.next(state => ({...state, ...mode}));\n\nconst navigate = nextView => applySubstate('navigation', {currentView: nextView});\n\nexport const navigateExercise = title => navigate(getExerciseId(title));\nexport const navigateHome = () => navigate(HOME_ID);\nexport const navigateShop = () => navigate(SHOP_ID);\nexport const navigatePassword = () => navigate(PASSWORD_ID);\n\nexport const showChangeModePrompt = open => changeMode({showPrompt: !!open});\nexport const setMode = ({selectedLevel, selectedText}) => {\n  changeMode({selectedLevel, selectedText, showPrompt: false});\n  navigate(HOME_ID);\n}\n\nexport const unlockShop = () => applySubstate('unlockables', {shopUnlocked: true});\n\nexport const toggleTheme = () => changeModeSubject.next(state => ({...state, theme: state.theme === 'dark' ? 'light' : 'dark'}))\n\nexport const enterPassword = (password = '') => commandSubject.next(state => {\n  const { mode, unlockables } = state;\n  const formattedPassword = password.toLowerCase();\n  const { isNew, isUsed } = evaluatePassword({password: formattedPassword, mode, unlockables});\n  if (isNew) {\n    alert('You have unlocked a new exercise!');\n    return {...state, unlockables: {...unlockables, password: formattedPassword}};\n  } else if (isUsed) {\n    alert('You have already unlocked this exercise.'); // TODO Alerts shouldn't be here. They should be in the view\n  } else {\n    alert('Sorry, I did not recognise that prompt.');\n  }\n  return state;\n});\n\nexport function getModeState(state) {\n  const { mode = {} } = state;\n  const { selectedLevel, selectedText, showPrompt, theme } = mode;\n  const { [selectedLevel]: { [selectedText]: localState = {}} = {} } = state;\n  const { navigation = {}, unlockables = {} } = localState;\n  return { navigation, unlockables, mode: { selectedLevel, selectedText, showPrompt, theme } };\n}\n\nexport const changeFactory = store$ => merge(\n  changeMode$.pipe(\n    withLatestFrom(store$, (command, store) => {\n      const { mode = {} } = store;\n      return {...store, mode: command(mode)};\n    })\n  ),\n  command$.pipe(\n    withLatestFrom(store$, (command, store) => {\n      const localState = getModeState(store);\n      const newLocalState = command(localState);\n\n      const { mode } = store;\n      const { selectedLevel, selectedText } = mode;\n\n      store[selectedLevel][selectedText] = newLocalState;\n\n      return { ...store };\n    }),\n  ),\n  subCommand$.pipe(\n    withLatestFrom(store$, ({key, command}, store) => {\n      const localState = getModeState(store);\n      const newSubstate = command(localState[key]);\n      const newLocalState = {\n        ...localState,\n        [key]: newSubstate\n      };\n      const { mode } = store;\n      const { selectedLevel, selectedText } = mode;\n\n      store[selectedLevel][selectedText] = newLocalState;\n      return { ...store };\n    })\n  )\n);","import { AppBar, IconButton, makeStyles, Theme, Toolbar, Typography } from '@material-ui/core';\nimport MoonIcon from '@material-ui/icons/Brightness2';\nimport SunIcon from '@material-ui/icons/Brightness5';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { navigateHome, showChangeModePrompt, toggleTheme } from '../persistence/state';\nimport { getTitleForLevel, getTitleForText } from '../resources/exercises';\nimport { Mode, Navigation } from '../types/state';\nimport { useDefaultStyles } from '../utils/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  homeButton: {\n    marginRight: 20,\n  },\n  appBar: {\n    backgroundColor: theme.palette.type === 'dark' ? theme.palette.background.paper : theme.palette.primary.main,\n    color: 'white'\n  }\n}));\n\ntype Props = {\n  mode: Mode,\n  navigation: Navigation\n};\n\nexport default function AppToolbar({mode, navigation}: Props) {\n\n  const classes = useStyles();\n  const defaultClasses = useDefaultStyles();\n\n  const title = navigation?.currentView?.title; // Current View may be undefined\n  const { selectedLevel, selectedText, theme } = mode;\n\n  const usingDarkTheme = useMemo(() => theme === 'dark', [theme]);\n  const levelTitle = useMemo(() => getTitleForLevel(selectedLevel), [selectedLevel]);\n  const textTitle = useMemo(() => getTitleForText({text: selectedText, level: selectedLevel}), [selectedText, selectedLevel]);\n\n  const changeMode = useCallback(() => showChangeModePrompt(true), []);\n  \n  return (\n    <AppBar position='relative' className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          color='inherit'\n          aria-label='Home'\n          onClick={navigateHome}\n          className={classes.homeButton}\n        >\n          <HomeIcon />\n        </IconButton>\n        <Typography variant='h6' color='inherit' noWrap className={defaultClasses.grow}>\n          {title}\n        </Typography>\n        {!!selectedText && !!selectedLevel ?\n          <Typography variant='subtitle1' color='inherit' noWrap >\n            Level: {levelTitle} Text: {textTitle}\n          </Typography>\n          : undefined\n        }\n        <IconButton\n          color='inherit'\n          title='Settings'\n          aria-label='Mode Selector'\n          onClick={changeMode}\n        >\n          <SettingsIcon />\n        </IconButton>\n        <IconButton\n          color='inherit'\n          title={usingDarkTheme ? 'Switch to light theme' : 'Switch to dark theme'}\n          aria-label='Toggle Theme'\n          onClick={toggleTheme}\n        >\n          {usingDarkTheme ? <SunIcon /> : <MoonIcon />}\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}","import { Divider, List, ListItem, ListItemIcon, ListItemText, ListSubheader, makeStyles, Theme } from '@material-ui/core';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport KeyIcon from '@material-ui/icons/VpnKey';\nimport React, { useMemo } from 'react';\n\nimport { navigateExercise, navigatePassword, navigateShop } from '../persistence/state';\nimport { Mode, Unlockables } from '../types/state';\nimport { getExerciseIndexForPassword } from '../utils/password';\nimport { getExerciseResources } from '../utils/resource-loader';\nimport { classNames, useDefaultStyles } from '../utils/styles';\n\nexport const drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    minWidth: drawerWidth,\n    maxWidth: drawerWidth,\n    borderRightColor: theme.palette.divider,\n    borderRightStyle: 'solid',\n    borderRightWidth: '1px'\n  }\n}));\n\ntype Props = {\n  unlockables: Unlockables,\n  mode: Mode\n};\n\nexport default function AppDrawer({unlockables, mode}: Props) {\n  const classes = useStyles();\n  const defaultClasses = useDefaultStyles();\n  const { shopUnlocked = false, password } = unlockables;\n\n  const exercises = useMemo(() => getExerciseResources(mode), [mode]);\n  const unlockedIndex = useMemo(() => getExerciseIndexForPassword({password, exercises}), [password, exercises]);\n\n  return (\n    <div className={classNames(classes.root, defaultClasses.vbox)}>\n      <List className={classNames(defaultClasses.vbox, defaultClasses.grow, defaultClasses.scroll)} subheader={<ListSubheader component='div'>Exercises</ListSubheader>}>\n        {exercises.map(({title}, index) => index <= unlockedIndex ? (\n          <List key={title}>\n            <ListItem button onClick={() => navigateExercise(title)}>\n              <ListItemIcon><KeyboardArrowRightIcon /></ListItemIcon>\n              <ListItemText primary={title} />\n            </ListItem>\n          </List>\n        ) : undefined)}\n      </List>\n      <Divider />\n      <div className={classNames(defaultClasses.vbox, defaultClasses.fixed)}>\n        {\n          !shopUnlocked ? undefined : (\n          <List>\n            <ListItem button onClick={navigateShop}>\n              <ListItemIcon><ShoppingCartIcon /></ListItemIcon>\n              <ListItemText primary='Shop' />\n            </ListItem>\n          </List>\n          )\n        }\n        <List>\n          <ListItem button onClick={navigatePassword}>\n            <ListItemIcon><KeyIcon /></ListItemIcon>\n            <ListItemText primary='Enter Prompt' />\n          </ListItem>\n        </List>\n      </div>\n    </div>\n  );\n}","import { makeStyles, Theme } from '@material-ui/core';\nimport React from 'react';\n\nimport { Mode, Navigation } from '../types/state';\nimport { classNames, useDefaultStyles } from '../utils/styles';\nimport { getView } from '../views';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: 16\n  }\n}));\n\ntype Props = {\n  navigation: Navigation,\n  mode: Mode\n};\n\nexport default function Content({mode, navigation}: Props) {\n  const classes = useStyles();\n  const defaultClasses = useDefaultStyles();\n  const View = getView(navigation.currentView);\n  return (\n    <div className={classNames(defaultClasses.hbox, classes.root, defaultClasses.scroll)}>\n      <View mode={mode} navigation={navigation} />\n    </div>\n  );\n}","import { Button, FormControl, makeStyles, Modal, Select, Theme, Typography } from '@material-ui/core';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { setMode, showChangeModePrompt } from '../persistence/state';\nimport { getTextsForLevel, LEVELS } from '../resources/exercises';\nimport { Mode } from '../types/state';\nimport { classNames, useDefaultStyles } from '../utils/styles';\n\nconst width: number = 400;\nconst height: number = 300;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  modalContainer: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    \n    position: 'absolute',\n    top: '25%',\n    left: '50%',\n    width,\n    height,\n    marginLeft: width * -0.5,\n    marginTop: height * -0.25\n  },\n  modalContent: {\n    padding: theme.spacing(2, 4, 3)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  settingLabel: {\n    width: 120,\n    textAlign: 'right',\n    margin: 8\n  },\n  title: {\n    marginBottom: 20\n  },\n  alignRight: {\n    justifyContent: 'flex-end'\n  }\n}));\n\ntype Props = {\n  mode: Mode\n};\n\ntype State = {\n  pendingLevel: string | undefined,\n  pendingText: string | undefined\n};\n\nfunction getLevelOptions() {\n  return LEVELS.map(({NAME, ID}) => ({name: NAME, id: ID}));\n}\n\nexport default function Settings({mode}: Props) {\n  const classes = useStyles();\n  const defaultClasses = useDefaultStyles();\n\n  const [state, setState] = useState<State>({pendingLevel: mode.selectedLevel, pendingText: mode.selectedText});\n\n  const { showPrompt, selectedLevel, selectedText } = mode;\n  const { pendingLevel, pendingText } = state;\n\n  useEffect(() => {\n    if (!mode.selectedLevel || !mode.selectedText) {\n      showChangeModePrompt(true);\n    }\n  }, [mode.selectedLevel, mode.selectedText]);\n  \n  const handleLevelChange = useCallback(event => {\n    setState({\n      pendingLevel: event.target.value,\n      pendingText: undefined\n    })\n  }, []);\n\n  const handleTextChange = useCallback(event => {\n    setState(state => ({...state, pendingText: event.target.value}));\n  }, []);\n\n  const handleSave = useCallback(() => {\n    setMode({selectedLevel: pendingLevel, selectedText: pendingText});\n  }, [pendingLevel, pendingText]);\n\n  const handleClose = useCallback(() => {\n    showChangeModePrompt(false);\n  }, []);\n\n  const getTextOptions = useCallback(() => {\n    const texts = getTextsForLevel(pendingLevel);\n    return texts.map(({NAME, ID}) => (<option key={ID} value={ID}>{NAME}</option>));\n  }, [pendingLevel]);\n\n  return (\n    <Modal\n      open={!!showPrompt}\n      disableBackdropClick={true}\n      disableEscapeKeyDown={true}\n    >\n      <div className={classNames(classes.modalContainer, defaultClasses.vbox)}>\n        <div className={classNames(defaultClasses.grow, classes.modalContent)}>\n          <Typography variant='h6' color='inherit' noWrap className={classes.title}>Settings</Typography>\n          <div className={defaultClasses.vbox}>\n            <div className={defaultClasses.hbox}>\n              <Typography variant='h6' color='inherit' noWrap className={classes.settingLabel}>Exam Level</Typography>\n              <FormControl className={classes.formControl}>\n                <Select native inputProps={{name: 'mode', id: 'mode-selector'}} value={pendingLevel} onChange={handleLevelChange}>\n                  <option value={undefined}></option>\n                  { getLevelOptions().map(({name, id}) => (<option key={id} value={id}>{name}</option>)) }\n                </Select>\n              </FormControl>\n            </div>\n            <div className={defaultClasses.hbox}>\n              <Typography variant='h6' color='inherit' noWrap className={classes.settingLabel}>Text</Typography>\n              <FormControl className={classes.formControl}>\n                <Select native inputProps={{name: 'mode', id: 'mode-selector'}} value={pendingText} onChange={handleTextChange}>\n                  <option value={undefined}></option>\n                  { getTextOptions() }\n                </Select>\n              </FormControl>\n            </div>\n          </div>\n        </div>\n        <div className={classNames(defaultClasses.fixed, defaultClasses.hbox, defaultClasses.buttonArea)}>\n          <Button\n            color='primary'\n            aria-label='Save'\n            onClick={handleSave}\n            disabled={!pendingLevel || !pendingText}\n          >\n            Save\n          </Button>\n          <Button\n            color='secondary'\n            aria-label='Cancel'\n            onClick={handleClose}\n            disabled={!selectedLevel || !selectedText}\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import queryString from 'query-string';\nimport { BehaviorSubject } from 'rxjs';\nimport { skip } from 'rxjs/operators';\n\nimport { TEXTS } from '../resources/exercises';\nimport { changeFactory } from './state';\n\nconst STORE_KEY = 'classics';\n\nconst defaultState = {};\n\nconst windowParams = queryString.parse(window.location.search);\n\nif (windowParams.clearEverything === 'true') {\n  if (window.confirm('Are you sure you want to clear everything?')) {\n    localStorage.removeItem(STORE_KEY);\n    alert('Cleared!');\n  }\n  window.location.href = window.location.href.split('?')[0];\n}\n\nfunction loadPersistedState() {\n  try {\n    const cached = localStorage.getItem(STORE_KEY);\n    return !!cached ? JSON.parse(cached) : defaultState;\n  } catch (e) {\n    console.log('Error getting internal state, returning default');\n    return defaultState;\n  }\n}\n\nfunction loadState() {\n  const state = loadPersistedState();\n  Object.keys(TEXTS).forEach(level => {\n    if (!state[level]) {\n      state[level] = {};\n      const texts = TEXTS[level];\n      texts.forEach(({ID}) => {\n        if (!state[level][ID]) {\n          state[level][ID] = {};\n        }\n      })\n    }\n  });\n  return state;\n}\n\nconst storeSubject = new BehaviorSubject(loadState());\nexport const store$ = storeSubject.asObservable();\n\nstore$.pipe(\n  skip(1)\n).subscribe(state => {\n  // console.log(state);\n  localStorage.setItem(STORE_KEY, JSON.stringify(state));\n});\n\nchangeFactory(store$).subscribe(state => storeSubject.next(state));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { store$ } from './persistence/store';\n\nReactDOM.render(<App store$={store$} />, document.getElementById('root'));\n\n","import { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport { CssBaseline } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nimport { Content, Drawer, Settings, Toolbar } from './components';\nimport { getModeState } from './persistence/state';\nimport { getMainColourForMode } from './utils/resource-loader';\nimport { classNames, useDefaultStyles } from './utils/styles';\n\ntype Props = {\n  store$: any\n};\n\nexport default function App({store$}: Props) {\n  const defaultClasses = useDefaultStyles();\n  const [ready, setReady] = useState(false);\n  const [state, setState] = useState({});\n  useEffect(() => {\n    const subscription = store$.subscribe(state => {\n      setState(state);\n      setReady(true);\n    });\n    return () => {\n      subscription.unsubscribe();\n    }\n  }, [store$]);\n\n  if (!ready) {\n    return null;\n  }\n  const { navigation = {}, unlockables = {}, mode } = getModeState(state);\n\n  const theme = {\n    palette: {\n      type: mode.theme || 'light',\n      primary: {\n        main: getMainColourForMode(mode)\n      },\n      secondary: {\n        main: '#e74c3c'\n      },\n      contrastThreshold: 3,\n      tonalOffset: 0.1\n    }\n  };\n\n  return (\n    <MuiThemeProvider theme={createMuiTheme(theme)}>\n      <CssBaseline />\n      <Toolbar mode={mode} navigation={navigation} />\n      <div className={classNames(defaultClasses.hbox, defaultClasses.noOverflow)}>\n        <Drawer unlockables={unlockables} mode={mode} />\n        <Content navigation={navigation} mode={mode} />\n      </div>\n      <Settings mode={mode} />\n    </MuiThemeProvider>\n  );\n}\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/teacher-square.5b5cb9f1.png\";","module.exports = __webpack_public_path__ + \"static/media/column.6a7b12c8.png\";","module.exports = __webpack_public_path__ + \"static/media/harp.8a9063ca.png\";","module.exports = __webpack_public_path__ + \"static/media/helmet.91e8bd0e.png\";","module.exports = __webpack_public_path__ + \"static/media/jar.2b88773c.png\";","module.exports = __webpack_public_path__ + \"static/media/ladle.c0b6ebce.png\";","module.exports = __webpack_public_path__ + \"static/media/owl.2bcb37a8.png\";","module.exports = __webpack_public_path__ + \"static/media/peacock.420e915b.png\";","module.exports = __webpack_public_path__ + \"static/media/scroll.5761a0f9.png\";","module.exports = __webpack_public_path__ + \"static/media/shield.00b0bada.png\";","module.exports = __webpack_public_path__ + \"static/media/ship.2cb26a70.png\";","module.exports = __webpack_public_path__ + \"static/media/sword.6cc740bd.png\";","module.exports = __webpack_public_path__ + \"static/media/toga.4f40ad24.png\";","module.exports = __webpack_public_path__ + \"static/media/hermes.825a2cdd.png\";","module.exports = __webpack_public_path__ + \"static/media/pigeon.71810740.png\";"],"sourceRoot":""}